{"version":3,"sources":["components/navbar/index.jsx","components/main/index.jsx","App.js","serviceWorker.js","index.js"],"names":["withSize","withStyles","theme","root","flexGrow","appbarRoot","backgroundColor","palette","colors","white","boxShadow","borderBottom","logoButton","&:hover","logoButtonIcon","fill","primary","main","marginTop","marginLeft","marginRight","gridWrapper","padding","height","tabsRoot","tabsIndicator","bottom","tabRoot","textTransform","minWidth","fontWeight","typography","fontWeightRegular","spacing","unit","fontFamily","join","color","light","opacity","&$tabSelected","fontWeightMedium","&:focus","tabSelected","menuButton","hide","display","drawer","width","flexShrink","drawerPaper","drawerHeader","Object","objectSpread","alignItems","mixins","toolbar","justifyContent","drawerToolbar","drawerListItem","cursor","withTheme","props","classes","loadItems","size","_useState","useState","_useState2","slicedToArray","value","setValue","_useState3","_useState4","open","setDrawerStatus","react_default","a","createElement","className","AppBar_default","position","Toolbar_default","disableGutters","href","IconButton_default","PhotoLibraryRounded_default","Grid_default","container","item","xs","flex","Tabs_default","onChange","event","indicator","Tab_default","disableRipple","selected","label","onClick","aria-label","classNames","Menu_default","Drawer_default","variant","anchor","paper","direction","ChevronLeft_default","ChevronRight_default","Divider_default","List_default","ListItem_default","ListItemText_default","minHeight","flexDirection","margin","paddingBottom","@media only screen and (max-width: 767px)","dialogContent","&:first-child","overflow","marginBottom","dialogContentText","background","dialogContentTextMobile","dialogContentTextTypo","dialogPaper","maxWidth","animation","dialogImage","listWrapper","flexWrap","gridList","transform","gridListTile","gridListTileInner","borderRadius","@keyframes zoom","from","to","@keyframes fadeIn","isLoading","items","selectedImage","updateSelectedImage","setDialogStatus","deviceWidth","cols","Dialog_default","onClose","DialogContent_default","src","ImageURLs","FullSize","alt","DialogContentText_default","Typography_default","body1","Title","body2","concat","Family","CollectiveNoun","Genus","caption","Description","CircularProgress_default","disableShrink","GridList_default","id","cellHeight","map","tile","GridListTile_default","key","Id","Thumb","GridListTileBar_default","title","subtitle","App","state","fetchItems","endpoint","Promise","resolve","reject","fetch","then","response","status","_this","setState","json","data","catch","err","updateItemsList","category","error","console","this","_this$state","navbar","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","createMuiTheme","type","deepPurple","dark","useNextVariants","fontSize","MuiButtonBase","ReactDOM","render","core_styles","src_App_0","document","getElementById","URL","process","origin","addEventListener","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3b83d197.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport classNames from \"classnames\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport PhotoLibrary from \"@material-ui/icons/PhotoLibraryRounded\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { withSize } from \"react-sizeme\";\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  appbarRoot: {\n    backgroundColor: theme.palette.colors.white,\n    boxShadow: \"none\",\n    borderBottom: \"1px solid #efefef\"\n  },\n  logoButton: {\n    \"&:hover\": {\n      backgroundColor: \"inherit\"\n    }\n  },\n  logoButtonIcon: {\n    fill: theme.palette.primary.main,\n    marginTop: 4,\n    marginLeft: 16,\n    marginRight: -16\n  },\n  gridWrapper: {\n    padding: \"0 60px\",\n    height: \"100%\"\n  },\n  tabsRoot: {\n    borderBottom: \"none\"\n  },\n  tabsIndicator: {\n    backgroundColor: theme.palette.primary.main,\n    bottom: 4\n  },\n  tabRoot: {\n    textTransform: \"initial\",\n    minWidth: 72,\n    fontWeight: theme.typography.fontWeightRegular,\n    marginRight: theme.spacing.unit * 4,\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(\",\"),\n    \"&:hover\": {\n      color: theme.palette.primary.light,\n      opacity: 1\n    },\n    \"&$tabSelected\": {\n      color: theme.palette.primary.main,\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    \"&:focus\": {\n      color: theme.palette.primary.light\n    }\n  },\n  tabSelected: {},\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-start\"\n  },\n  drawerToolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  drawerListItem: {\n    color: theme.palette.primary.main,\n    cursor: \"pointer\",\n\n    \"&:hover\": {\n      color: theme.palette.primary.light,\n      opacity: 1\n    },\n    \"&:focus\": {\n      color: theme.palette.primary.light\n    }\n  },\n  typography: {\n    padding: theme.spacing.unit * 3\n  }\n});\n\nconst Navbar = props => {\n  const { classes, loadItems, size, theme } = props;\n  const [value, setValue] = useState(0);\n  const [open, setDrawerStatus] = useState(false);\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        classes={{ root: classes.appbarRoot }}\n        position=\"fixed\"\n        color=\"default\"\n      >\n        <Toolbar\n          classes={{ root: size.width <= 612 && classes.drawerToolbar }}\n          disableGutters={!open}\n        >\n          <a href=\"/\">\n            <IconButton className={classes.logoButton}>\n              <PhotoLibrary className={classes.logoButtonIcon} />\n            </IconButton>\n          </a>\n          {size.width > 612 ? (\n            <Grid\n              container\n              className={classes.gridWrapper}\n              spacing={24}\n              alignItems=\"baseline\"\n            >\n              <Grid item xs={12} className={classes.flex}>\n                <Tabs\n                  value={value}\n                  onChange={(event, value) => setValue(value)}\n                  classes={{\n                    root: classes.tabsRoot,\n                    indicator: classes.tabsIndicator\n                  }}\n                >\n                  <Tab\n                    disableRipple\n                    classes={{\n                      root: classes.tabRoot,\n                      selected: classes.tabSelected\n                    }}\n                    label=\"ANIMALS\"\n                    onClick={() => loadItems(\"animals\")}\n                  />\n                  <Tab\n                    disableRipple\n                    classes={{\n                      root: classes.tabRoot,\n                      selected: classes.tabSelected\n                    }}\n                    label=\"FRUITS & VEG\"\n                    onClick={() => loadItems(\"fruits&veg\")}\n                  />\n                </Tabs>\n              </Grid>\n            </Grid>\n          ) : (\n            <IconButton\n              color=\"primary\"\n              aria-label=\"Open drawer\"\n              onClick={() => setDrawerStatus(true)}\n              className={classNames(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n          )}\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={() => setDrawerStatus(false)} color=\"primary\">\n            {theme.direction === \"rtl\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem disableRipple onClick={() => loadItems(\"animals\")}>\n            <ListItemText\n              classes={{ primary: classes.drawerListItem }}\n              primary={\"ANIMALS\"}\n            />\n          </ListItem>\n          <ListItem disableRipple onClick={() => loadItems(\"fruits&veg\")}>\n            <ListItemText\n              classes={{ primary: classes.drawerListItem }}\n              primary={\"FRUITS & VEG\"}\n            />\n          </ListItem>\n        </List>\n      </Drawer>\n    </div>\n  );\n};\n\nNavbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  loadItems: PropTypes.func.isRequired,\n  size: PropTypes.object.isRequired\n};\n\nexport default withSize()(withStyles(styles, { withTheme: true })(Navbar));\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport classNames from \"classnames\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport { withSize } from \"react-sizeme\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = theme => ({\n  root: {\n    height: \"100%\",\n    display: \"flex\",\n    width: \"80%\",\n    justifyContent: \"center\",\n    minHeight: 400,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    margin: \"0 auto\",\n    marginTop: 90,\n    paddingBottom: 24,\n    \"@media only screen and (max-width: 767px)\": {\n      width: \"90%\"\n    }\n  },\n  dialogContent: {\n    padding: 0,\n    position: \"relative\",\n    \"&:first-child\": {\n      padding: 0,\n      overflow: \"hidden\",\n      marginBottom: -12\n    }\n  },\n  dialogContentText: {\n    position: \"absolute\",\n    bottom: 10,\n    background: \"rgba(0,0,0,0.6)\",\n    padding: 12\n  },\n  dialogContentTextMobile: {\n    position: \"static\",\n    marginTop: -12\n  },\n  dialogContentTextTypo: {\n    color: theme.palette.colors.white\n  },\n  dialogPaper: {\n    width: \"auto\",\n    margin: 24,\n    maxWidth: \"90%\",\n    animation: \"zoom 0.6s\"\n  },\n  dialogImage: {\n    width: \"100%\"\n  },\n  listWrapper: {\n    width: \"100%\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: \"100%\",\n    height: \"100%\",\n    transform: \"translateZ(0)\"\n  },\n  gridListTile: {\n    animation: \"fadeIn 1s ease-in both\"\n  },\n  gridListTileInner: {\n    borderRadius: 0\n  },\n  \"@keyframes zoom\": {\n    from: {\n      transform: \"scale(0)\"\n    },\n    to: {\n      transform: \"scale(1)\"\n    }\n  },\n\n  \"@keyframes fadeIn\": {\n    from: {\n      opacity: 0,\n      transform: \"translate3d(0, -20%, 0)\"\n    },\n    to: {\n      opacity: 1,\n      transform: \" translate3d(0, 0, 0)\"\n    }\n  }\n});\n\nconst Main = props => {\n  const { classes, isLoading, items, size } = props;\n  const [selectedImage, updateSelectedImage] = useState({});\n  const [open, setDialogStatus] = useState(false);\n  const deviceWidth = size.width;\n  let cols = 3;\n\n  if (deviceWidth >= 1192) {\n    cols = 5;\n  } else if (deviceWidth >= 767) {\n    cols = 4;\n  } else if (deviceWidth >= 612) {\n    cols = 3;\n  } else if (deviceWidth >= 392) {\n    cols = 2;\n  } else if (deviceWidth < 392) {\n    cols = 1;\n  }\n\n  return (\n    <main className={classes.root}>\n      <Dialog\n        classes={{ paper: classes.dialogPaper }}\n        onClose={() => setDialogStatus(false)}\n        open={open}\n      >\n        <DialogContent className={classes.dialogContent}>\n          <img\n            className={classes.dialogImage}\n            src={open && selectedImage.ImageURLs.FullSize}\n            alt=\"Zoomed\"\n          />\n          <DialogContentText\n            classes={{\n              root: classNames(\n                classes.dialogContentText,\n                size.width < 512 && classes.dialogContentTextMobile\n              )\n            }}\n          >\n            <Typography\n              classes={{ body1: classes.dialogContentTextTypo }}\n              variant=\"body1\"\n            >\n              {selectedImage.Title}\n            </Typography>\n            <Typography\n              classes={{ body2: classes.dialogContentTextTypo }}\n              variant=\"body2\"\n            >\n              {`Family: ${selectedImage.Family}`}\n            </Typography>\n            <Typography\n              classes={{ body2: classes.dialogContentTextTypo }}\n              variant=\"body2\"\n            >\n              {selectedImage.CollectiveNoun &&\n                `Collective Noun: ${selectedImage.CollectiveNoun}`}\n              {selectedImage.Genus && `Genus: ${selectedImage.Genus}`}\n            </Typography>\n            <Typography\n              classes={{ caption: classes.dialogContentTextTypo }}\n              variant=\"caption\"\n            >\n              {selectedImage.Description}\n            </Typography>\n          </DialogContentText>\n        </DialogContent>\n      </Dialog>\n      {isLoading ? (\n        <CircularProgress disableShrink />\n      ) : (\n        <div className={classes.listWrapper}>\n          <GridList\n            id=\"masonry\"\n            cellHeight={160}\n            className={classes.gridList}\n            cols={cols}\n          >\n            {items.map(tile => (\n              <GridListTile\n                classes={{\n                  root: classes.gridListTile,\n                  tile: classes.gridListTileInner\n                }}\n                key={tile.Id}\n                cols={tile.cols || 1}\n                onClick={() => {\n                  updateSelectedImage(tile);\n                  setDialogStatus(true);\n                }}\n              >\n                <img src={tile.ImageURLs.Thumb} alt={tile.Title} />\n                <GridListTileBar\n                  title={tile.Title}\n                  subtitle={<span>Family: {tile.Family}</span>}\n                />\n              </GridListTile>\n            ))}\n          </GridList>\n        </div>\n      )}\n    </main>\n  );\n};\n\nMain.propTypes = {\n  classes: PropTypes.object.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  items: PropTypes.array.isRequired,\n  size: PropTypes.object.isRequired\n};\n\nexport default withSize()(withStyles(styles)(Main));\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Navbar, Main } from \"./components\";\n\nclass App extends Component {\n  state = {\n    items: [],\n    isLoading: false\n  };\n\n  componentWillMount() {\n    this.updateItemsList(\"animals\");\n  }\n\n  fetchItems = endpoint => {\n    return new Promise((resolve, reject) => {\n      fetch(endpoint)\n        .then(response => {\n          if (response.status !== 200) {\n            this.setState({ isLoading: false });\n            reject(\n              \"Looks like there was a problem. Status Code: \" + response.status\n            );\n          }\n\n          // Examine the items in the response\n          response.json().then(data => {\n            this.setState({ isLoading: false });\n            resolve(data);\n          });\n        })\n        .catch(err => {\n          this.setState({ isLoading: false });\n          reject(\"Fetch Error :-S\", err);\n        });\n    });\n  };\n\n  updateItemsList = category => {\n    try {\n      this.setState({ isLoading: true });\n      switch (category) {\n        case \"animals\":\n          this.fetchItems(\n            \"http://styleguide.effectivedigital.com/interview/api/animals\"\n          ).then(items => this.setState({ items }));\n          return;\n        case \"fruits&veg\":\n          this.fetchItems(\n            \"http://styleguide.effectivedigital.com/interview/api/fruitveg\"\n          ).then(items => this.setState({ items }));\n          return;\n        default:\n          return;\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  render() {\n    const { isLoading, items } = this.state;\n\n    return (\n      <div>\n        <Navbar loadItems={this.updateItemsList} />\n        <Main isLoading={isLoading} items={items} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"light\",\n    primary: {\n      main: deepPurple[500],\n      light: deepPurple[300],\n      dark: deepPurple[700]\n    },\n    colors: {\n      white: \"#fff\"\n    }\n  },\n  typography: {\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(\",\"),\n    useNextVariants: true,\n    fontSize: 16,\n    fontWeight: 300\n  },\n  props: {\n    MuiButtonBase: {\n      disableRipple: true\n    }\n  }\n});\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <App />\n  </MuiThemeProvider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}